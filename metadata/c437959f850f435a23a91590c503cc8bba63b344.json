{"title":"Unix system programming in  ocaml ( UPPOG2 } Torrents","uid":9004261,"size":878258,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:c437959f850f435a23a91590c503cc8bba63b344&amp;dn=Unix+system+programming+in++ocaml+%28+UPPOG2+%7D+Torrents&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":5,"leechers":0,"uploader":"bookgeeks","files":4,"time":1381006956,"description":"Unix system programming in  ocaml ( UPPOG2 } Torrents\n\nThese course notes originate from a system programming course Xavier Leroy\ntaught in 1994 to the first year students of the MasterÃ¢â‚¬â„¢s program in fundamental\nand applied mathematics and computer science at the Ãƒâ€°cole Normale SupÃƒÂ©rieure.\nThis earliest version used the Caml-Light [1] language. For a MasterÃ¢â‚¬â„¢s course in\ncomputer science at the Ãƒâ€°cole Polytechnique taught from 2003 to 2006, Didier\nRÃƒÂ©my adapted the notes to use the OCaml language. During these years, Gilles\nRoussel, Fabrice Le Fessant and Maxence Guesdon helped to teach the course\nand also contributed to this document. The new version also brought additions\nand updates. In ten years, some orders of magnitude have shifted by a digit\nand the web has left its infancy. For instance, the http relay example, now\ncommonplace, may have been a forerunner in 1994. But, most of all, the OCaml\nlanguage gained maturity and was used to program real system applications like\nUnison [18].\nTradition dictates that Unix system programming must be done in C. For\nthis course we found it more interesting to use a higher-level language, namely\nOCaml, to explain the fundamentals of Unix system programming.\nThe OCaml interface to Unix system calls is more abstract. Instead of en-\ncoding everything in terms of integers and bit fields as in C, OCaml uses the\nwhole power of the ML type system to clearly represent the arguments and re-\nturn values of system calls. Hence, it becomes easier to explain the semantics of\nthe calls instead of losing oneself explaining how the arguments and the results\nhave to be en/decoded. (See, for example, the presentation of the system call\nwait, page 42.)\nFurthermore, due to the static type system and the clarity of its primitives, it\nis safer to program in OCaml than in C. The experienced C programmer may see\nthese benefits as useless luxury, however they are crucial for the inexperienced\naudience of this course.\nA second goal of this exposition of system programming is to show OCaml\nperforming in a domain out of its usual applications in theorem proving, com-\npilation and symbolic computation. The outcome of the experiment is rather\npositive, thanks to OCamlÃ¢â‚¬â„¢s solid imperative kernel and its other novel aspects\nlike parametric polymorphism, higher-order functions and exceptions. It also\nshows that instead of applicative and imperative programming being mutually\nexclusive, their combination makes it possible to integrate in the same program\ncomplex symbolic computations and a good interface with the operating system.\nThese notes assume the reader is familiar with OCaml and Unix shell com-\nmands. For any question about the language, consult the OCaml System docu-\nmentation [2] and for questions about Unix, read section 1 of the Unix manual or\nintroductory books on Unix like [5, 6].\nThis document describes only the programmatic interface to the Unix sys-\ntem. It presents neither its implementation, neither its internal architecture.\nThe internal architecture of bsd 4.3 is described in [8] and of System v in [9].\nTanenbaumÃ¢â‚¬â„¢s books [13, 14] give an overall view of network and operating system\narchitecture\n\nBook Details :\n\nSize : 877 Kb\nPages : 173\nTitle :  Unix system programming in\n ocaml\nLaguage : English\nFormat : pdf\n\nFollow us on facebook...\n\nhttp:// www. facebook. com/ torrentsharing\n","torrent":{"xt":"urn:btih:c437959f850f435a23a91590c503cc8bba63b344","amp;dn":"Unix+system+programming+in++ocaml+%28+UPPOG2+%7D+Torrents","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"c437959f850f435a23a91590c503cc8bba63b344","infoHashBuffer":{"type":"Buffer","data":[196,55,149,159,133,15,67,90,35,169,21,144,197,3,204,139,186,99,179,68]},"announce":[],"urlList":[]}}