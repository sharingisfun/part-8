{"title":"Real-Time Embedded Systems: Design Principles and Engineering Pr","uid":13468342,"size":53984373,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:16e070acc5b7f0f1be02a4eef320f9ac2182c477&amp;dn=Real-Time+Embedded+Systems%3A+Design+Principles+and+Engineering+Pr&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&amp;tr=udp%3A%2F%2Fzer0day.ch%3A1337&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":5,"leechers":0,"uploader":"NoctDeath","files":2,"time":1454960352,"description":"Title: Real-Time Embedded Systems: Design Principles and Engineering Practices \r\nAuthor: Xiaocong Fan \r\nFormat: PDF \r\nHardcover: 686 pages \r\nPublisher: Newnes; 1 edition (February 11, 2015) \r\nLanguage: English \r\nISBN: 9780128015070 \r\n\r\n\r\nThis book integrates new ideas and topics from real time systems, embedded systems, and software engineering to give a complete picture of the whole process of developing software for real-time embedded applications. You will not only gain a thorough understanding of concepts related to microprocessors, interrupts, and system boot process, appreciating the importance of real-time modeling and scheduling, but you will also learn software engineering practices such as model documentation, model analysis, design patterns, and standard conformance.\r\n\r\nThis book is split into four parts to help you learn the key concept of embedded systems; Part one introduces the development process, and includes two chapters on microprocessors and interrupts---fundamental topics for software engineers; Part two is dedicated to modeling techniques for real-time systems; Part three looks at the design of software architectures and Part four covers software implementations, with a focus on POSIX-compliant operating systems.\r\n\r\nWith this book you will learn:\r\n\r\n- The pros and cons of different architectures for embedded systems\r\n- POSIX real-time extensions, and how to develop POSIX-compliant real time applications\r\n- How to use real-time UML to document system designs with timing constraints\r\n- The challenges and concepts related to cross-development\r\n- Multitasking design and inter-task communication techniques (shared memory objects, message queues, pipes, signals)\r\n- How to use kernel objects (e.g. Semaphores, Mutex, Condition variables) to address resource sharing issues in RTOS applications\r\n- The philosophy underpinning the notion of &quot;resource manager&quot; and how to implement a virtual file system using a resource manager\r\n- The key principles of real-time scheduling and several key algorithms\r\n- Coverage of the latest UML standard (UML 2.4)\r\n- Over 20 design patterns which represent the best practices for reuse in a wide range of real-time embedded systems\r\n- Example codes which have been tested in QNX---a real-time operating system widely adopted in industry","torrent":{"xt":"urn:btih:16e070acc5b7f0f1be02a4eef320f9ac2182c477","amp;dn":"Real-Time+Embedded+Systems%3A+Design+Principles+and+Engineering+Pr","amp;tr":["udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969","udp%3A%2F%2Fzer0day.ch%3A1337","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"16e070acc5b7f0f1be02a4eef320f9ac2182c477","infoHashBuffer":{"type":"Buffer","data":[22,224,112,172,197,183,240,241,190,2,164,238,243,32,249,172,33,130,196,119]},"announce":[],"urlList":[]}}